{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/narit/Desktop/pos-frontend/src/utils/API_URL.ts"],"sourcesContent":["export const MAIN_URL: string = \"http://localhost:3333/\"\nexport const REGISTER_URL = `${MAIN_URL}register`\nexport const USER_URL = `${MAIN_URL}user`\nexport const LOGIN_URL = `${MAIN_URL}login`\nexport const PRODUCT_URL = `${MAIN_URL}product`\nexport const CATEGORY_URL = `${MAIN_URL}category`\n"],"names":[],"mappings":";;;;;;;;AAAO,MAAM,WAAmB;AACzB,MAAM,eAAe,GAAG,SAAS,QAAQ,CAAC;AAC1C,MAAM,WAAW,GAAG,SAAS,IAAI,CAAC;AAClC,MAAM,YAAY,GAAG,SAAS,KAAK,CAAC;AACpC,MAAM,cAAc,GAAG,SAAS,OAAO,CAAC;AACxC,MAAM,eAAe,GAAG,SAAS,QAAQ,CAAC"}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file:///Users/narit/Desktop/pos-frontend/src/services/category.ts"],"sourcesContent":["import { CATEGORY_URL } from \"@/utils/API_URL\"\n\nexport const categoryService = {\n    getAll: async () => {\n        try {\n            const req = await fetch(CATEGORY_URL, { credentials: \"include\" })\n            const res = await req.json()\n            if (res.success) {\n                return res.data\n            }\n        } catch (error) {\n            console.log(error)\n            return error\n        }\n    },\n}\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,kBAAkB;IAC3B,QAAQ;QACJ,IAAI;YACA,MAAM,MAAM,MAAM,MAAM,0HAAA,CAAA,eAAY,EAAE;gBAAE,aAAa;YAAU;YAC/D,MAAM,MAAM,MAAM,IAAI,IAAI;YAC1B,IAAI,IAAI,OAAO,EAAE;gBACb,OAAO,IAAI,IAAI;YACnB;QACJ,EAAE,OAAO,OAAO;YACZ,QAAQ,GAAG,CAAC;YACZ,OAAO;QACX;IACJ;AACJ"}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///Users/narit/Desktop/pos-frontend/src/contexts/CategoryContext.tsx"],"sourcesContent":["\"use client\"\nimport { createContext, useEffect, useState, useContext } from \"react\"\nimport { categoryService } from \"@/services/category\"\nimport { ReactNode } from \"react\"\n\ninterface Category {\n    id: number\n    name: string\n    detail: string\n}\n\ninterface CategoryContextType {\n    categoryList: Category[]\n}\n\ninterface CategoryProviderProps {\n    children: ReactNode\n}\n\nconst CategoryContext = createContext<CategoryContextType | undefined>(\n    undefined,\n)\n\nfunction CategoryProvider({ children }: CategoryProviderProps) {\n    const [categoryList, setCategoryList] = useState<Category[]>([])\n    const getCategories = async () => {\n        const categories = await categoryService.getAll()\n        setCategoryList(categories)\n    }\n    useEffect(() => {\n        getCategories()\n    }, [])\n    return (\n        <CategoryContext.Provider value={{ categoryList }}>\n            {children}\n        </CategoryContext.Provider>\n    )\n}\n\nexport const useCategory = () => {\n    const context = useContext(CategoryContext)\n    if (!context) {\n        throw new Error(\"useCategory must be used within a CategoryPrivider\")\n    }\n    return context\n}\nexport default CategoryProvider\n"],"names":[],"mappings":";;;;;AACA;AACA;;;AAFA;;;AAmBA,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAChC;AAGJ,SAAS,iBAAiB,EAAE,QAAQ,EAAyB;;IACzD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAc,EAAE;IAC/D,MAAM,gBAAgB;QAClB,MAAM,aAAa,MAAM,8HAAA,CAAA,kBAAe,CAAC,MAAM;QAC/C,gBAAgB;IACpB;IACA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;sCAAE;YACN;QACJ;qCAAG,EAAE;IACL,qBACI,6LAAC,gBAAgB,QAAQ;QAAC,OAAO;YAAE;QAAa;kBAC3C;;;;;;AAGb;GAdS;KAAA;AAgBF,MAAM,cAAc;;IACvB,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACV,MAAM,IAAI,MAAM;IACpB;IACA,OAAO;AACX;IANa;uCAOE"}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file:///Users/narit/Desktop/pos-frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["\"use client\"\n\nimport {\n    createContext,\n    ReactNode,\n    useContext,\n    useState,\n    Dispatch,\n    SetStateAction,\n} from \"react\"\n\ninterface User {\n    id: number\n    name: string\n    surname: string\n    email: string\n    phone_number: string\n    username: string\n    status: string\n    role: string\n}\n\ninterface UserContextType {\n    user: User | null\n    setUser: Dispatch<SetStateAction<User | null>>\n}\n\nconst AuthContext = createContext<UserContextType | undefined>(undefined)\n\nfunction AuthProvider({ children }: { children: ReactNode }) {\n    const [user, setUser] = useState<User | null>(null)\n\n    return (\n        <AuthContext.Provider value={{ user, setUser }}>\n            {children}\n        </AuthContext.Provider>\n    )\n}\n\nexport const useAuth = () => {\n    const context = useContext(AuthContext)\n    if (!context) {\n        throw new Error(\"AuthContext must be used within an AuthProvider\")\n    }\n    return context\n}\n\nexport default AuthProvider\n"],"names":[],"mappings":";;;;;AAEA;;;AAFA;;AA2BA,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAA+B;AAE/D,SAAS,aAAa,EAAE,QAAQ,EAA2B;;IACvD,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;IAE9C,qBACI,6LAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;QAAQ;kBACxC;;;;;;AAGb;GARS;KAAA;AAUF,MAAM,UAAU;;IACnB,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACV,MAAM,IAAI,MAAM;IACpB;IACA,OAAO;AACX;IANa;uCAQE"}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}