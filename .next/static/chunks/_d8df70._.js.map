{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/narit/Desktop/pos-frontend/src/services/product.ts"],"sourcesContent":["import { PRODUCT_URL } from \"@/utils/API_URL\"\nimport { ProductCreate, ProductUpdate } from \"@/interfaces/Product\"\n\nexport const productService = {\n    getAll: async () => {\n        try {\n            const req = await fetch(PRODUCT_URL, { credentials: \"include\" })\n            const res = await req.json()\n            return res.data\n        } catch (error) {\n            console.log(error)\n            return error\n        }\n    },\n    getById: async (id: string) => {\n        try {\n            const req = await fetch(`${PRODUCT_URL}/${id}`, {\n                credentials: \"include\",\n            })\n            const res = await req.json()\n            return res.data\n        } catch (error) {\n            console.log(error)\n            return error\n        }\n    },\n    update: async (updatedProduct: ProductUpdate) => {\n        try {\n            const req = await fetch(`${PRODUCT_URL}/${updatedProduct.id}`, {\n                method: \"PATCH\",\n                headers: { \"Content-Type\": \"application/json\" },\n                credentials: \"include\",\n                body: JSON.stringify(updatedProduct),\n            })\n            const res = await req.json()\n            return res.success\n        } catch (error) {\n            console.log(error)\n            return false\n        }\n    },\n    create: async (newProduct: ProductCreate) => {\n        try {\n            const req = await fetch(PRODUCT_URL, {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                credentials: \"include\",\n                body: JSON.stringify(newProduct),\n            })\n            const res = await req.json()\n            console.log(res)\n\n            return res.success\n        } catch (error) {\n            console.log(error)\n            return false\n        }\n    },\n}\n"],"names":[],"mappings":";;;AAAA;;AAGO,MAAM,iBAAiB;IAC1B,QAAQ;QACJ,IAAI;YACA,MAAM,MAAM,MAAM,MAAM,0HAAA,CAAA,cAAW,EAAE;gBAAE,aAAa;YAAU;YAC9D,MAAM,MAAM,MAAM,IAAI,IAAI;YAC1B,OAAO,IAAI,IAAI;QACnB,EAAE,OAAO,OAAO;YACZ,QAAQ,GAAG,CAAC;YACZ,OAAO;QACX;IACJ;IACA,SAAS,OAAO;QACZ,IAAI;YACA,MAAM,MAAM,MAAM,MAAM,GAAG,0HAAA,CAAA,cAAW,CAAC,CAAC,EAAE,IAAI,EAAE;gBAC5C,aAAa;YACjB;YACA,MAAM,MAAM,MAAM,IAAI,IAAI;YAC1B,OAAO,IAAI,IAAI;QACnB,EAAE,OAAO,OAAO;YACZ,QAAQ,GAAG,CAAC;YACZ,OAAO;QACX;IACJ;IACA,QAAQ,OAAO;QACX,IAAI;YACA,MAAM,MAAM,MAAM,MAAM,GAAG,0HAAA,CAAA,cAAW,CAAC,CAAC,EAAE,eAAe,EAAE,EAAE,EAAE;gBAC3D,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,aAAa;gBACb,MAAM,KAAK,SAAS,CAAC;YACzB;YACA,MAAM,MAAM,MAAM,IAAI,IAAI;YAC1B,OAAO,IAAI,OAAO;QACtB,EAAE,OAAO,OAAO;YACZ,QAAQ,GAAG,CAAC;YACZ,OAAO;QACX;IACJ;IACA,QAAQ,OAAO;QACX,IAAI;YACA,MAAM,MAAM,MAAM,MAAM,0HAAA,CAAA,cAAW,EAAE;gBACjC,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,aAAa;gBACb,MAAM,KAAK,SAAS,CAAC;YACzB;YACA,MAAM,MAAM,MAAM,IAAI,IAAI;YAC1B,QAAQ,GAAG,CAAC;YAEZ,OAAO,IAAI,OAAO;QACtB,EAAE,OAAO,OAAO;YACZ,QAAQ,GAAG,CAAC;YACZ,OAAO;QACX;IACJ;AACJ"}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///Users/narit/Desktop/pos-frontend/src/components/product/ProductForm.tsx"],"sourcesContent":["\"use client\"\nimport { useCategory } from \"@/contexts/CategoryContext\"\nimport { useEffect, useState } from \"react\"\nimport { ProductUpdate } from \"@/interfaces/Product\"\nimport { productService } from \"@/services/product\"\nimport { useRouter } from \"next/navigation\"\n\ninterface Props {\n    product?: {\n        id: number\n        name: string\n        category: number\n        price: number\n        cost: number\n        stock: number\n        detail: string\n    }\n    productId?: string\n}\nconst defaultInputStyle = \"p-2 border rounded\"\n\nfunction ProductForm(props: Props) {\n    const router = useRouter()\n    const [mode, setMode] = useState(\"\")\n    const { productId } = props\n\n    const { categoryList } = useCategory()\n    const [thisProduct, setThisProduct] = useState<ProductUpdate>({\n        id: 0,\n        name: \"\",\n        category: 0,\n        price: 0,\n        cost: 0,\n        stock: 0,\n        detail: \"\",\n    })\n\n    const getCategory = (newCat: string) => {\n        const findCat = categoryList.find((cat) => cat.name === newCat)\n        if (findCat) {\n            setThisProduct((prev) => ({ ...prev, category: findCat.id }))\n        }\n    }\n\n    const ckeckMode = async () => {\n        if (typeof productId !== \"undefined\") {\n            setMode(\"edit\")\n            const loadProduct = await productService.getById(productId)\n            setThisProduct({ ...loadProduct, id: productId })\n        } else {\n            setMode(\"create\")\n        }\n    }\n\n    const handleInputChange = (\n        e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n    ) => {\n        const { id, value } = e.target\n\n        setThisProduct((prev) => ({\n            ...prev,\n            [id]:\n                id === \"category\" ||\n                id === \"price\" ||\n                id === \"cost\" ||\n                id === \"stock\"\n                    ? Number(value)\n                    : value,\n        }))\n    }\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault()\n        if (mode === \"edit\") {\n            // do something\n            const updatedProduct = thisProduct\n            const updated = await productService.update(updatedProduct)\n            if (updated) {\n                alert(\"update success\")\n                router.push(\"product\")\n            } else {\n                alert(\"update failed\")\n            }\n            return\n        }\n\n        if (mode === \"create\") {\n            const newProduct = thisProduct\n            const created = await productService.create(newProduct)\n            if (created) {\n                alert(\"create new product success\")\n            } else {\n                alert(\"create failed\")\n            }\n            return\n        }\n    }\n    // useEffect(() => {}, [getCategory])\n\n    useEffect(() => {\n        ckeckMode()\n    }, [])\n    return (\n        <>\n            <form onSubmit={handleSubmit} className=\"flex flex-col\">\n                <div className=\"flex flex-col p-2\">\n                    <label htmlFor=\"name\">Product Name</label>\n                    <input\n                        id=\"name\"\n                        type=\"text\"\n                        value={thisProduct.name}\n                        onChange={handleInputChange}\n                        className={defaultInputStyle}\n                    />\n                </div>\n                <div className=\"flex flex-col p-2\">\n                    <label htmlFor=\"category\">Category</label>\n                    <select\n                        id=\"category\"\n                        value={thisProduct.category}\n                        className={defaultInputStyle}\n                        onChange={handleInputChange}\n                    >\n                        {categoryList.map((cat) => {\n                            return (\n                                <option key={cat.id} value={cat.id}>\n                                    {cat.name}\n                                </option>\n                            )\n                        })}\n                    </select>\n                </div>\n                <div className=\"flex flex-col p-2\">\n                    <label htmlFor=\"price\">Price</label>\n                    <input\n                        id=\"price\"\n                        type=\"number\"\n                        value={thisProduct.price}\n                        onChange={handleInputChange}\n                        className={defaultInputStyle}\n                    />\n                </div>\n                <div className=\"flex flex-col p-2\">\n                    <label htmlFor=\"cost\">Cost</label>\n                    <input\n                        id=\"cost\"\n                        type=\"number\"\n                        value={thisProduct.cost}\n                        onChange={handleInputChange}\n                        className={defaultInputStyle}\n                    />\n                </div>\n                <div className=\"flex flex-col p-2\">\n                    <label htmlFor=\"stock\">Stock</label>\n                    <input\n                        id=\"stock\"\n                        type=\"number\"\n                        value={thisProduct.stock}\n                        onChange={handleInputChange}\n                        className={defaultInputStyle}\n                    />\n                </div>\n                <div className=\"flex flex-col p-2\">\n                    <label htmlFor=\"detail\">Detail</label>\n                    <input\n                        id=\"detail\"\n                        type=\"text\"\n                        value={thisProduct.detail}\n                        onChange={handleInputChange}\n                        className={defaultInputStyle}\n                    />\n                </div>\n                <button type=\"submit\" className={defaultInputStyle}>\n                    Submit\n                </button>\n            </form>\n        </>\n    )\n}\nexport default ProductForm\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 384, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 394, "column": 0}, "map": {"version":3,"sources":["file:///Users/narit/Desktop/pos-frontend/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0]}},
    {"offset": {"line": 395, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}