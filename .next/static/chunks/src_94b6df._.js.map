{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/narit/Desktop/pos-frontend/src/services/product.ts"],"sourcesContent":["import { PRODUCT_URL } from \"@/utils/API_URL\"\nimport { ProductCreate, ProductUpdate } from \"@/interfaces/Product\"\n\nexport const productService = {\n    getAll: async () => {\n        try {\n            const req = await fetch(PRODUCT_URL, { credentials: \"include\" })\n            const res = await req.json()\n            return res.data\n        } catch (error) {\n            console.log(error)\n            return error\n        }\n    },\n    getById: async (id: string) => {\n        try {\n            const req = await fetch(`${PRODUCT_URL}/${id}`, {\n                credentials: \"include\",\n            })\n            const res = await req.json()\n            return res.data\n        } catch (error) {\n            console.log(error)\n            return error\n        }\n    },\n    update: async (updatedProduct: ProductUpdate) => {\n        try {\n            const req = await fetch(`${PRODUCT_URL}/${updatedProduct.id}`, {\n                method: \"PATCH\",\n                headers: { \"Content-Type\": \"application/json\" },\n                credentials: \"include\",\n                body: JSON.stringify(updatedProduct),\n            })\n            const res = await req.json()\n            return res.success\n        } catch (error) {\n            console.log(error)\n            return false\n        }\n    },\n    create: async (newProduct: ProductCreate) => {\n        try {\n            const req = await fetch(PRODUCT_URL, {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                credentials: \"include\",\n                body: JSON.stringify(newProduct),\n            })\n            const res = await req.json()\n            console.log(res)\n\n            return res.success\n        } catch (error) {\n            console.log(error)\n            return false\n        }\n    },\n}\n"],"names":[],"mappings":";;;AAAA;;AAGO,MAAM,iBAAiB;IAC1B,QAAQ;QACJ,IAAI;YACA,MAAM,MAAM,MAAM,MAAM,0HAAA,CAAA,cAAW,EAAE;gBAAE,aAAa;YAAU;YAC9D,MAAM,MAAM,MAAM,IAAI,IAAI;YAC1B,OAAO,IAAI,IAAI;QACnB,EAAE,OAAO,OAAO;YACZ,QAAQ,GAAG,CAAC;YACZ,OAAO;QACX;IACJ;IACA,SAAS,OAAO;QACZ,IAAI;YACA,MAAM,MAAM,MAAM,MAAM,GAAG,0HAAA,CAAA,cAAW,CAAC,CAAC,EAAE,IAAI,EAAE;gBAC5C,aAAa;YACjB;YACA,MAAM,MAAM,MAAM,IAAI,IAAI;YAC1B,OAAO,IAAI,IAAI;QACnB,EAAE,OAAO,OAAO;YACZ,QAAQ,GAAG,CAAC;YACZ,OAAO;QACX;IACJ;IACA,QAAQ,OAAO;QACX,IAAI;YACA,MAAM,MAAM,MAAM,MAAM,GAAG,0HAAA,CAAA,cAAW,CAAC,CAAC,EAAE,eAAe,EAAE,EAAE,EAAE;gBAC3D,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,aAAa;gBACb,MAAM,KAAK,SAAS,CAAC;YACzB;YACA,MAAM,MAAM,MAAM,IAAI,IAAI;YAC1B,OAAO,IAAI,OAAO;QACtB,EAAE,OAAO,OAAO;YACZ,QAAQ,GAAG,CAAC;YACZ,OAAO;QACX;IACJ;IACA,QAAQ,OAAO;QACX,IAAI;YACA,MAAM,MAAM,MAAM,MAAM,0HAAA,CAAA,cAAW,EAAE;gBACjC,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,aAAa;gBACb,MAAM,KAAK,SAAS,CAAC;YACzB;YACA,MAAM,MAAM,MAAM,IAAI,IAAI;YAC1B,QAAQ,GAAG,CAAC;YAEZ,OAAO,IAAI,OAAO;QACtB,EAAE,OAAO,OAAO;YACZ,QAAQ,GAAG,CAAC;YACZ,OAAO;QACX;IACJ;AACJ"}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///Users/narit/Desktop/pos-frontend/src/components/product/ProductItem.tsx"],"sourcesContent":["\"use client\"\nimport { useCategory } from \"@/contexts/CategoryContext\"\nimport { useRouter } from \"next/navigation\"\ninterface Category {\n    id: number\n    name: string\n}\n\ninterface Props {\n    product: {\n        id: number\n        name: string\n        category: number\n        price: number\n        cost: number\n        stock: number\n    }\n}\n\nfunction ProductItem({ product }: Props) {\n    const router = useRouter()\n    const { categoryList } = useCategory()\n\n    const categoryDisplay =\n        categoryList?.find((cat: Category) => cat.id === product.category)\n            ?.name || \"Unknown Category\"\n\n    return (\n        <tr\n            onClick={() => router.push(`product/edit/${product.id}`)}\n            className=\"cursor-pointer divide-x divide-y p-2 text-center\"\n        >\n            <td>{product.id}</td>\n            <td>{product.name}</td>\n            <td>{categoryDisplay}</td>\n            <td>{product.price}</td>\n            <td>{product.cost}</td>\n            <td>{product.stock}</td>\n        </tr>\n    )\n}\n\nexport default ProductItem\n"],"names":[],"mappings":";;;;AACA;AACA;;;AAFA;;;AAmBA,SAAS,YAAY,EAAE,OAAO,EAAS;;IACnC,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,EAAE,YAAY,EAAE,GAAG,CAAA,GAAA,sIAAA,CAAA,cAAW,AAAD;IAEnC,MAAM,kBACF,cAAc,KAAK,CAAC,MAAkB,IAAI,EAAE,KAAK,QAAQ,QAAQ,GAC3D,QAAQ;IAElB,qBACI,6LAAC;QACG,SAAS,IAAM,OAAO,IAAI,CAAC,CAAC,aAAa,EAAE,QAAQ,EAAE,EAAE;QACvD,WAAU;;0BAEV,6LAAC;0BAAI,QAAQ,EAAE;;;;;;0BACf,6LAAC;0BAAI,QAAQ,IAAI;;;;;;0BACjB,6LAAC;0BAAI;;;;;;0BACL,6LAAC;0BAAI,QAAQ,KAAK;;;;;;0BAClB,6LAAC;0BAAI,QAAQ,IAAI;;;;;;0BACjB,6LAAC;0BAAI,QAAQ,KAAK;;;;;;;;;;;;AAG9B;GArBS;;QACU,qIAAA,CAAA,YAAS;QACC,sIAAA,CAAA,cAAW;;;KAF/B;uCAuBM"}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":["file:///Users/narit/Desktop/pos-frontend/src/app/product/page.jsx"],"sourcesContent":["\"use client\"\n\nimport { useRouter } from \"next/navigation\"\nimport { useState, useEffect } from \"react\"\nimport { productService } from \"@/services/product\"\nimport ProductItem from \"@/components/product/ProductItem\"\nimport { Button, MenuItem, Select } from \"@mui/material\"\n\nexport default function Page() {\n    const router = useRouter()\n    const [isLoading, setIsLoading] = useState(false)\n    const [isError, setIsError] = useState(false)\n    const [productList, setProductList] = useState([])\n    const getProducts = async () => {\n        setIsLoading(true)\n        const products = await productService.getAll()\n        if (products.length === 0) {\n            setIsLoading(false)\n            setIsError(true)\n            return\n        }\n        setProductList(products)\n    }\n    const handleCreateButton = () => {\n        router.push(\"product/new\")\n    }\n    useEffect(() => {\n        getProducts()\n    }, [])\n    return (\n        <div className=\"flex flex-col\">\n            {isLoading || <p>Loading</p>}\n            <p className=\"text-xl font-bold\">Product page</p>\n            <Button variant=\"\" className=\"bg-red-50\">\n                create new product\n            </Button>\n            <Select>\n                <MenuItem>a</MenuItem>\n                <MenuItem>b</MenuItem>\n                <MenuItem>c</MenuItem>\n            </Select>\n            <button\n                type=\"button\"\n                className=\"rounded border p-2\"\n                onClick={handleCreateButton}\n            >\n                Create new product\n            </button>\n            <table className=\"m-2 w-[100vw] divide-y border p-2\">\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>Name</th>\n                        <th>Category</th>\n                        <th>Price</th>\n                        <th>Cost</th>\n                        <th>Stock</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {productList.map((product) => {\n                        return (\n                            <ProductItem key={product.id} product={product} />\n                        )\n                    })}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;AANA;;;;;;AAQe,SAAS;;IACpB,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IACjD,MAAM,cAAc;QAChB,aAAa;QACb,MAAM,WAAW,MAAM,6HAAA,CAAA,iBAAc,CAAC,MAAM;QAC5C,IAAI,SAAS,MAAM,KAAK,GAAG;YACvB,aAAa;YACb,WAAW;YACX;QACJ;QACA,eAAe;IACnB;IACA,MAAM,qBAAqB;QACvB,OAAO,IAAI,CAAC;IAChB;IACA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0BAAE;YACN;QACJ;yBAAG,EAAE;IACL,qBACI,6LAAC;QAAI,WAAU;;YACV,2BAAa,6LAAC;0BAAE;;;;;;0BACjB,6LAAC;gBAAE,WAAU;0BAAoB;;;;;;0BACjC,6LAAC,6LAAA,CAAA,SAAM;gBAAC,SAAQ;gBAAG,WAAU;0BAAY;;;;;;0BAGzC,6LAAC,6LAAA,CAAA,SAAM;;kCACH,6LAAC,mMAAA,CAAA,WAAQ;kCAAC;;;;;;kCACV,6LAAC,mMAAA,CAAA,WAAQ;kCAAC;;;;;;kCACV,6LAAC,mMAAA,CAAA,WAAQ;kCAAC;;;;;;;;;;;;0BAEd,6LAAC;gBACG,MAAK;gBACL,WAAU;gBACV,SAAS;0BACZ;;;;;;0BAGD,6LAAC;gBAAM,WAAU;;kCACb,6LAAC;kCACG,cAAA,6LAAC;;8CACG,6LAAC;8CAAG;;;;;;8CACJ,6LAAC;8CAAG;;;;;;8CACJ,6LAAC;8CAAG;;;;;;8CACJ,6LAAC;8CAAG;;;;;;8CACJ,6LAAC;8CAAG;;;;;;8CACJ,6LAAC;8CAAG;;;;;;;;;;;;;;;;;kCAGZ,6LAAC;kCACI,YAAY,GAAG,CAAC,CAAC;4BACd,qBACI,6LAAC,+IAAA,CAAA,UAAW;gCAAkB,SAAS;+BAArB,QAAQ,EAAE;;;;;wBAEpC;;;;;;;;;;;;;;;;;;AAKpB;GA7DwB;;QACL,qIAAA,CAAA,YAAS;;;KADJ"}},
    {"offset": {"line": 377, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}