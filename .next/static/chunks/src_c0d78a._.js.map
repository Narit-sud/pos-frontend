{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/narit/Desktop/pos-frontend/src/components/CategoryDropdown.tsx"],"sourcesContent":["\"use client\"\nimport { ReactNode, useState, useEffect } from \"react\"\nimport { useCategory } from \"@/contexts/Category\"\n\ninterface Props {\n    selectedCategory?: string\n    createMode?: boolean\n}\n\nfunction CategoryDropdown({\n    selectedCategory = \"\",\n    createMode = true,\n}: Props): ReactNode {\n    const [isLoading, setIsLoading] = useState(true)\n    const [isOpen, setIsopen] = useState(false)\n    const [value, setValue] = useState(\n        selectedCategory === \"\" ? \"Select Category\" : selectedCategory,\n    )\n\n    const { categoryList } = useCategory()\n\n    const toggleDropdown = () => {\n        setIsopen(!isOpen)\n    }\n\n    const selectValue = (newValue: string) => {\n        setValue(newValue)\n        console.log(newValue)\n\n        toggleDropdown()\n    }\n\n    useEffect(() => {\n        if (categoryList[0]) {\n            setIsLoading(false)\n            setValue(categoryList[0].name)\n        }\n    }, [categoryList])\n\n    return (\n        <div>\n            <p className=\"text-xl font-bold\">Test page</p>\n            <p className=\"text-xl font-bold\">\n                Loading: {JSON.stringify(isLoading)}\n            </p>\n            <p className=\"text-xl font-bold\">\n                createMode: {JSON.stringify(createMode)}\n            </p>\n\n            <button\n                id=\"dropdownDefaultButton\"\n                data-dropdown-toggle=\"dropdown\"\n                className=\"inline-flex items-center rounded-lg border bg-white px-5 py-2.5 text-center text-sm font-medium hover:bg-gray-300 focus:outline-none\"\n                type=\"button\"\n                onClick={toggleDropdown}\n            >\n                {value}\n                <svg\n                    className=\"ms-3 h-2.5 w-2.5\"\n                    aria-hidden=\"true\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 10 6\"\n                >\n                    <path\n                        stroke=\"currentColor\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth=\"2\"\n                        d=\"m1 1 4 4 4-4\"\n                    />\n                </svg>\n            </button>\n\n            <div\n                id=\"dropdown\"\n                className={\n                    isOpen\n                        ? \"z-10 w-44 divide-y divide-gray-100 rounded-lg bg-white shadow\"\n                        : \"hidden\"\n                }\n            >\n                <ul\n                    className=\"py-2 text-sm text-gray-700 dark:text-gray-200\"\n                    aria-labelledby=\"dropdownDefaultButton\"\n                    onBlur={() => {\n                        isOpen && setIsopen(false)\n                    }}\n                >\n                    {!isLoading &&\n                        categoryList.map((cat) => {\n                            return (\n                                <li key={cat.id}>\n                                    <button\n                                        onClick={() => {\n                                            selectValue(cat.name)\n                                        }}\n                                        className={`${value === cat.name ? \"font-bold\" : \"\"} block w-full px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white`}\n                                    >\n                                        {cat.name}\n                                    </button>\n                                </li>\n                            )\n                        })}\n                    {createMode && (\n                        <li>\n                            <button\n                                onClick={() => {\n                                    selectValue(\"Create new category\")\n                                }}\n                                disabled={isLoading}\n                                className={`${value === \"Create new category\" ? \"font-bold\" : \"\"} block w-full px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white`}\n                            >\n                                Create new category\n                            </button>\n                        </li>\n                    )}\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nexport default CategoryDropdown\n"],"names":[],"mappings":";;;;AACA;AACA;;;AAFA;;;AASA,SAAS,iBAAiB,EACtB,mBAAmB,EAAE,EACrB,aAAa,IAAI,EACb;;IACJ,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAC7B,qBAAqB,KAAK,oBAAoB;IAGlD,MAAM,EAAE,YAAY,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,cAAW,AAAD;IAEnC,MAAM,iBAAiB;QACnB,UAAU,CAAC;IACf;IAEA,MAAM,cAAc,CAAC;QACjB,SAAS;QACT,QAAQ,GAAG,CAAC;QAEZ;IACJ;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;sCAAE;YACN,IAAI,YAAY,CAAC,EAAE,EAAE;gBACjB,aAAa;gBACb,SAAS,YAAY,CAAC,EAAE,CAAC,IAAI;YACjC;QACJ;qCAAG;QAAC;KAAa;IAEjB,qBACI,6LAAC;;0BACG,6LAAC;gBAAE,WAAU;0BAAoB;;;;;;0BACjC,6LAAC;gBAAE,WAAU;;oBAAoB;oBACnB,KAAK,SAAS,CAAC;;;;;;;0BAE7B,6LAAC;gBAAE,WAAU;;oBAAoB;oBAChB,KAAK,SAAS,CAAC;;;;;;;0BAGhC,6LAAC;gBACG,IAAG;gBACH,wBAAqB;gBACrB,WAAU;gBACV,MAAK;gBACL,SAAS;;oBAER;kCACD,6LAAC;wBACG,WAAU;wBACV,eAAY;wBACZ,OAAM;wBACN,MAAK;wBACL,SAAQ;kCAER,cAAA,6LAAC;4BACG,QAAO;4BACP,eAAc;4BACd,gBAAe;4BACf,aAAY;4BACZ,GAAE;;;;;;;;;;;;;;;;;0BAKd,6LAAC;gBACG,IAAG;gBACH,WACI,SACM,kEACA;0BAGV,cAAA,6LAAC;oBACG,WAAU;oBACV,mBAAgB;oBAChB,QAAQ;wBACJ,UAAU,UAAU;oBACxB;;wBAEC,CAAC,aACE,aAAa,GAAG,CAAC,CAAC;4BACd,qBACI,6LAAC;0CACG,cAAA,6LAAC;oCACG,SAAS;wCACL,YAAY,IAAI,IAAI;oCACxB;oCACA,WAAW,GAAG,UAAU,IAAI,IAAI,GAAG,cAAc,GAAG,sFAAsF,CAAC;8CAE1I,IAAI,IAAI;;;;;;+BAPR,IAAI,EAAE;;;;;wBAWvB;wBACH,4BACG,6LAAC;sCACG,cAAA,6LAAC;gCACG,SAAS;oCACL,YAAY;gCAChB;gCACA,UAAU;gCACV,WAAW,GAAG,UAAU,wBAAwB,cAAc,GAAG,sFAAsF,CAAC;0CAC3J;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAS7B;GAhHS;;QAUoB,+HAAA,CAAA,cAAW;;;KAV/B;uCAkHM"}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":["file:///Users/narit/Desktop/pos-frontend/src/app/test/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { ReactNode } from \"react\"\nimport CategoryDropdown from \"@/components/CategoryDropdown\"\n\nexport default function Page(): ReactNode {\n    return <CategoryDropdown createMode={true} selectedCategory=\"\" />\n}\n"],"names":[],"mappings":";;;;AAGA;AAHA;;;AAKe,SAAS;IACpB,qBAAO,6LAAC,yIAAA,CAAA,UAAgB;QAAC,YAAY;QAAM,kBAAiB;;;;;;AAChE;KAFwB"}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}