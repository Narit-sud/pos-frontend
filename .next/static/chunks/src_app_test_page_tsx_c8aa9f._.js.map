{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/narit/Desktop/pos-frontend/src/app/test/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { ReactNode, useState } from \"react\"\nimport { useCategory } from \"@/contexts/Category\"\n\nexport default function Page(): ReactNode {\n    const [isOpen, setIsopen] = useState(false)\n    const toggleDropdown = () => {\n        setIsopen(!isOpen)\n    }\n    const { categoryList } = useCategory()\n    return (\n        <div>\n            <p className=\"text-xl font-bold\">Test page</p>\n\n            <button\n                id=\"dropdownDefaultButton\"\n                data-dropdown-toggle=\"dropdown\"\n                className=\"inline-flex items-center rounded-lg border bg-white px-5 py-2.5 text-center text-sm font-medium hover:bg-gray-300 focus:outline-none\"\n                type=\"button\"\n                onClick={toggleDropdown}\n            >\n                Dropdown button{\" \"}\n                <svg\n                    className=\"ms-3 h-2.5 w-2.5\"\n                    aria-hidden=\"true\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 10 6\"\n                >\n                    <path\n                        stroke=\"currentColor\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth=\"2\"\n                        d=\"m1 1 4 4 4-4\"\n                    />\n                </svg>\n            </button>\n\n            <div\n                id=\"dropdown\"\n                className={\n                    isOpen\n                        ? \"z-10 w-44 divide-y divide-gray-100 rounded-lg bg-white shadow\"\n                        : \"hidden\"\n                }\n            >\n                <ul\n                    className=\"py-2 text-sm text-gray-700 dark:text-gray-200\"\n                    aria-labelledby=\"dropdownDefaultButton\"\n                >\n                    {categoryList.map((cat) => {\n                        return (\n                            <li key={cat.id}>\n                                <button className=\"block w-full px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white\">\n                                    {cat.name}\n                                </button>\n                            </li>\n                        )\n                    })}\n                </ul>\n            </div>\n        </div>\n    )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKe,SAAS;;IACpB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,iBAAiB;QACnB,UAAU,CAAC;IACf;IACA,MAAM,EAAE,YAAY,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,cAAW,AAAD;IACnC,qBACI,6LAAC;;0BACG,6LAAC;gBAAE,WAAU;0BAAoB;;;;;;0BAEjC,6LAAC;gBACG,IAAG;gBACH,wBAAqB;gBACrB,WAAU;gBACV,MAAK;gBACL,SAAS;;oBACZ;oBACmB;kCAChB,6LAAC;wBACG,WAAU;wBACV,eAAY;wBACZ,OAAM;wBACN,MAAK;wBACL,SAAQ;kCAER,cAAA,6LAAC;4BACG,QAAO;4BACP,eAAc;4BACd,gBAAe;4BACf,aAAY;4BACZ,GAAE;;;;;;;;;;;;;;;;;0BAKd,6LAAC;gBACG,IAAG;gBACH,WACI,SACM,kEACA;0BAGV,cAAA,6LAAC;oBACG,WAAU;oBACV,mBAAgB;8BAEf,aAAa,GAAG,CAAC,CAAC;wBACf,qBACI,6LAAC;sCACG,cAAA,6LAAC;gCAAO,WAAU;0CACb,IAAI,IAAI;;;;;;2BAFR,IAAI,EAAE;;;;;oBAMvB;;;;;;;;;;;;;;;;;AAKpB;GA5DwB;;QAKK,+HAAA,CAAA,cAAW;;;KALhB"}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}