{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/narit/Desktop/pos-frontend/src/services/product.ts"],"sourcesContent":["import { PRODUCT_URL } from \"@/utils/API_URL\"\nimport { ProductCreate, ProductUpdate } from \"@/interfaces/Product\"\n\nexport const productService = {\n    getAll: async () => {\n        try {\n            const req = await fetch(PRODUCT_URL, { credentials: \"include\" })\n            const res = await req.json()\n            return res.data\n        } catch (error) {\n            console.log(error)\n            return error\n        }\n    },\n    getById: async (id: string) => {\n        try {\n            const req = await fetch(`${PRODUCT_URL}/${id}`, {\n                credentials: \"include\",\n            })\n            const res = await req.json()\n            return res.data\n        } catch (error) {\n            console.log(error)\n            return error\n        }\n    },\n    update: async (updatedProduct: ProductUpdate) => {\n        try {\n            const req = await fetch(`${PRODUCT_URL}/${updatedProduct.id}`, {\n                method: \"PATCH\",\n                headers: { \"Content-Type\": \"application/json\" },\n                credentials: \"include\",\n                body: JSON.stringify(updatedProduct),\n            })\n            const res = await req.json()\n            return res.success\n        } catch (error) {\n            console.log(error)\n            return false\n        }\n    },\n    create: async (newProduct: ProductCreate) => {\n        try {\n            const req = await fetch(PRODUCT_URL, {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                credentials: \"include\",\n                body: JSON.stringify(newProduct),\n            })\n            const res = await req.json()\n            console.log(res)\n\n            return res.success\n        } catch (error) {\n            console.log(error)\n            return false\n        }\n    },\n}\n"],"names":[],"mappings":";;;AAAA;;AAGO,MAAM,iBAAiB;IAC1B,QAAQ;QACJ,IAAI;YACA,MAAM,MAAM,MAAM,MAAM,uHAAA,CAAA,cAAW,EAAE;gBAAE,aAAa;YAAU;YAC9D,MAAM,MAAM,MAAM,IAAI,IAAI;YAC1B,OAAO,IAAI,IAAI;QACnB,EAAE,OAAO,OAAO;YACZ,QAAQ,GAAG,CAAC;YACZ,OAAO;QACX;IACJ;IACA,SAAS,OAAO;QACZ,IAAI;YACA,MAAM,MAAM,MAAM,MAAM,GAAG,uHAAA,CAAA,cAAW,CAAC,CAAC,EAAE,IAAI,EAAE;gBAC5C,aAAa;YACjB;YACA,MAAM,MAAM,MAAM,IAAI,IAAI;YAC1B,OAAO,IAAI,IAAI;QACnB,EAAE,OAAO,OAAO;YACZ,QAAQ,GAAG,CAAC;YACZ,OAAO;QACX;IACJ;IACA,QAAQ,OAAO;QACX,IAAI;YACA,MAAM,MAAM,MAAM,MAAM,GAAG,uHAAA,CAAA,cAAW,CAAC,CAAC,EAAE,eAAe,EAAE,EAAE,EAAE;gBAC3D,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,aAAa;gBACb,MAAM,KAAK,SAAS,CAAC;YACzB;YACA,MAAM,MAAM,MAAM,IAAI,IAAI;YAC1B,OAAO,IAAI,OAAO;QACtB,EAAE,OAAO,OAAO;YACZ,QAAQ,GAAG,CAAC;YACZ,OAAO;QACX;IACJ;IACA,QAAQ,OAAO;QACX,IAAI;YACA,MAAM,MAAM,MAAM,MAAM,uHAAA,CAAA,cAAW,EAAE;gBACjC,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,aAAa;gBACb,MAAM,KAAK,SAAS,CAAC;YACzB;YACA,MAAM,MAAM,MAAM,IAAI,IAAI;YAC1B,QAAQ,GAAG,CAAC;YAEZ,OAAO,IAAI,OAAO;QACtB,EAAE,OAAO,OAAO;YACZ,QAAQ,GAAG,CAAC;YACZ,OAAO;QACX;IACJ;AACJ"}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file:///Users/narit/Desktop/pos-frontend/src/components/CategoryDropdown.tsx"],"sourcesContent":["\"use client\"\nimport { ReactNode, useState, useEffect } from \"react\"\nimport { useCategory } from \"@/contexts/Category\"\n\ninterface Props {\n    selectedCategory?: string\n    selectedCategoryId?: number\n    createMode?: boolean\n    getValue?: (newCat: string) => void\n}\n\nfunction CategoryDropdown({\n    selectedCategory = \"\",\n    createMode = true,\n    getValue,\n}: Props): ReactNode {\n    const [isLoading, setIsLoading] = useState(true)\n    const [isOpen, setIsopen] = useState(false)\n    const [value, setValue] = useState(\n        selectedCategory === \"\" ? \"Select Category\" : selectedCategory,\n    )\n\n    const { categoryList } = useCategory()\n\n    const toggleDropdown = () => {\n        setIsopen(!isOpen)\n    }\n\n    const selectValue = (newValue: string) => {\n        setValue(newValue)\n        console.log(newValue)\n        toggleDropdown()\n        if (getValue) {\n            getValue(newValue)\n        }\n    }\n\n    useEffect(() => {\n        if (categoryList[0]) {\n            setIsLoading(false)\n            setValue(categoryList[0].name)\n        }\n    }, [categoryList])\n\n    return (\n        <div>\n            <button\n                id=\"dropdownDefaultButton\"\n                data-dropdown-toggle=\"dropdown\"\n                className=\"inline-flex items-center rounded-lg border bg-white px-5 py-2.5 text-center text-sm font-medium hover:bg-gray-300 focus:outline-none\"\n                type=\"button\"\n                onClick={toggleDropdown}\n            >\n                {value}\n                <svg\n                    className=\"ms-3 h-2.5 w-2.5\"\n                    aria-hidden=\"true\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 10 6\"\n                >\n                    <path\n                        stroke=\"currentColor\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth=\"2\"\n                        d=\"m1 1 4 4 4-4\"\n                    />\n                </svg>\n            </button>\n\n            <div\n                id=\"dropdown\"\n                className={\n                    isOpen\n                        ? \"z-10 w-44 divide-y divide-gray-100 rounded-lg bg-white shadow\"\n                        : \"hidden\"\n                }\n            >\n                <ul\n                    className=\"py-2 text-sm text-gray-700 dark:text-gray-200\"\n                    aria-labelledby=\"dropdownDefaultButton\"\n                    onBlur={() => {\n                        isOpen && setIsopen(false)\n                    }}\n                >\n                    {!isLoading &&\n                        categoryList.map((cat) => {\n                            return (\n                                <li key={cat.id}>\n                                    <button\n                                        type=\"button\"\n                                        onClick={() => {\n                                            selectValue(cat.name)\n                                        }}\n                                        className={`${value === cat.name ? \"font-bold\" : \"\"} block w-full px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white`}\n                                    >\n                                        {cat.name}\n                                    </button>\n                                </li>\n                            )\n                        })}\n                    {createMode && (\n                        <li>\n                            <button\n                                type=\"button\"\n                                onClick={() => {\n                                    selectValue(\"Create new category\")\n                                }}\n                                disabled={isLoading}\n                                className={`${value === \"Create new category\" ? \"font-bold\" : \"\"} block w-full px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white`}\n                            >\n                                Create new category\n                            </button>\n                        </li>\n                    )}\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nexport default CategoryDropdown\n"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AAWA,SAAS,iBAAiB,EACtB,mBAAmB,EAAE,EACrB,aAAa,IAAI,EACjB,QAAQ,EACJ;IACJ,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAC7B,qBAAqB,KAAK,oBAAoB;IAGlD,MAAM,EAAE,YAAY,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,cAAW,AAAD;IAEnC,MAAM,iBAAiB;QACnB,UAAU,CAAC;IACf;IAEA,MAAM,cAAc,CAAC;QACjB,SAAS;QACT,QAAQ,GAAG,CAAC;QACZ;QACA,IAAI,UAAU;YACV,SAAS;QACb;IACJ;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,IAAI,YAAY,CAAC,EAAE,EAAE;YACjB,aAAa;YACb,SAAS,YAAY,CAAC,EAAE,CAAC,IAAI;QACjC;IACJ,GAAG;QAAC;KAAa;IAEjB,qBACI,8OAAC;;0BACG,8OAAC;gBACG,IAAG;gBACH,wBAAqB;gBACrB,WAAU;gBACV,MAAK;gBACL,SAAS;;oBAER;kCACD,8OAAC;wBACG,WAAU;wBACV,eAAY;wBACZ,OAAM;wBACN,MAAK;wBACL,SAAQ;kCAER,cAAA,8OAAC;4BACG,QAAO;4BACP,eAAc;4BACd,gBAAe;4BACf,aAAY;4BACZ,GAAE;;;;;;;;;;;;;;;;;0BAKd,8OAAC;gBACG,IAAG;gBACH,WACI,SACM,kEACA;0BAGV,cAAA,8OAAC;oBACG,WAAU;oBACV,mBAAgB;oBAChB,QAAQ;wBACJ,UAAU,UAAU;oBACxB;;wBAEC,CAAC,aACE,aAAa,GAAG,CAAC,CAAC;4BACd,qBACI,8OAAC;0CACG,cAAA,8OAAC;oCACG,MAAK;oCACL,SAAS;wCACL,YAAY,IAAI,IAAI;oCACxB;oCACA,WAAW,GAAG,UAAU,IAAI,IAAI,GAAG,cAAc,GAAG,sFAAsF,CAAC;8CAE1I,IAAI,IAAI;;;;;;+BARR,IAAI,EAAE;;;;;wBAYvB;wBACH,4BACG,8OAAC;sCACG,cAAA,8OAAC;gCACG,MAAK;gCACL,SAAS;oCACL,YAAY;gCAChB;gCACA,UAAU;gCACV,WAAW,GAAG,UAAU,wBAAwB,cAAc,GAAG,sFAAsF,CAAC;0CAC3J;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAS7B;uCAEe"}},
    {"offset": {"line": 219, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 225, "column": 0}, "map": {"version":3,"sources":["file:///Users/narit/Desktop/pos-frontend/src/components/product/ProductForm.tsx"],"sourcesContent":["\"use client\"\nimport { useCategory } from \"@/contexts/Category\"\nimport { useEffect, useState } from \"react\"\nimport { ProductCreate, ProductUpdate } from \"@/interfaces/Product\"\nimport { productService } from \"@/services/product\"\nimport CategoryDropdown from \"../CategoryDropdown\"\n\ninterface Props {\n    product?: {\n        id: number\n        name: string\n        category: number\n        price: number\n        cost: number\n        stock: number\n        detail: string\n    }\n    productId?: string\n}\nconst defaultInputStyle = \"p-2 border rounded\"\n\nfunction ProductForm(props: Props) {\n    const [mode, setMode] = useState(\"\")\n    const { productId } = props\n\n    const { categoryList } = useCategory()\n    const [thisProduct, setThisProduct] = useState<ProductUpdate>({\n        id: 0,\n        name: \"\",\n        category: 0,\n        price: 0,\n        cost: 0,\n        stock: 0,\n        detail: \"\",\n    })\n\n    const getCategory = (newCat: string) => {\n        const findCat = categoryList.find((cat) => cat.name === newCat)\n        if (findCat) {\n            setThisProduct((prev) => ({ ...prev, category: findCat.id }))\n        }\n    }\n\n    const ckeckMode = async () => {\n        if (productId) {\n            setMode(\"edit\")\n            const loadProduct = await productService.getById(productId)\n            setThisProduct({ ...loadProduct, id: productId })\n        } else {\n            setMode(\"create\")\n        }\n    }\n\n    const handleInputChange = (\n        e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n    ) => {\n        const { id, value } = e.target\n\n        setThisProduct((prev) => ({\n            ...prev,\n            [id]:\n                id === \"category\" ||\n                id === \"price\" ||\n                id === \"cost\" ||\n                id === \"stock\"\n                    ? Number(value)\n                    : value,\n        }))\n    }\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault()\n        if (mode === \"edit\") {\n            // do something\n            const updatedProduct = thisProduct\n            const updated = await productService.update(updatedProduct)\n            if (updated) {\n                alert(\"update success\")\n            } else {\n                alert(\"update failed\")\n            }\n            return\n        }\n\n        if (mode === \"create\") {\n            const newProduct = thisProduct\n            const created = await productService.create(newProduct)\n            if (created) {\n                alert(\"create new product success\")\n            } else {\n                alert(\"create failed\")\n            }\n            return\n        }\n    }\n    useEffect(() => {\n        console.log(\"change\")\n    }, [getCategory])\n\n    useEffect(() => {\n        ckeckMode()\n    }, [])\n    return (\n        <>\n            <form onSubmit={handleSubmit} className=\"flex flex-col\">\n                <div className=\"flex flex-col p-2\">\n                    <label htmlFor=\"name\">Product Name</label>\n                    <input\n                        id=\"name\"\n                        type=\"text\"\n                        value={thisProduct.name}\n                        onChange={handleInputChange}\n                        className={defaultInputStyle}\n                    />\n                </div>\n                <div className=\"flex flex-col p-2\">\n                    <label htmlFor=\"category\">Category</label>\n                    <select\n                        id=\"category\"\n                        value={thisProduct.category}\n                        className={defaultInputStyle}\n                        onChange={handleInputChange}\n                    >\n                        {categoryList.map((cat) => {\n                            return (\n                                <option key={cat.id} value={cat.id}>\n                                    {cat.name}\n                                </option>\n                            )\n                        })}\n                    </select>\n                </div>\n                <div>\n                    <CategoryDropdown\n                        // selectedCategory={\n                        //     categoryList.find(\n                        //         (cat) => cat.id === thisProduct.cat,\n                        //     ).name\n                        // }\n                        createMode={true}\n                        getValue={getCategory}\n                    />\n                </div>\n                <div className=\"flex flex-col p-2\">\n                    <label htmlFor=\"price\">Price</label>\n                    <input\n                        id=\"price\"\n                        type=\"number\"\n                        value={thisProduct.price}\n                        onChange={handleInputChange}\n                        className={defaultInputStyle}\n                    />\n                </div>\n                <div className=\"flex flex-col p-2\">\n                    <label htmlFor=\"cost\">Cost</label>\n                    <input\n                        id=\"cost\"\n                        type=\"number\"\n                        value={thisProduct.cost}\n                        onChange={handleInputChange}\n                        className={defaultInputStyle}\n                    />\n                </div>\n                <div className=\"flex flex-col p-2\">\n                    <label htmlFor=\"stock\">Stock</label>\n                    <input\n                        id=\"stock\"\n                        type=\"number\"\n                        value={thisProduct.stock}\n                        onChange={handleInputChange}\n                        className={defaultInputStyle}\n                    />\n                </div>\n                <div className=\"flex flex-col p-2\">\n                    <label htmlFor=\"detail\">Detail</label>\n                    <input\n                        id=\"detail\"\n                        type=\"text\"\n                        value={thisProduct.detail}\n                        onChange={handleInputChange}\n                        className={defaultInputStyle}\n                    />\n                </div>\n                <button type=\"submit\" className={defaultInputStyle}>\n                    Submit\n                </button>\n            </form>\n        </>\n    )\n}\nexport default ProductForm\n"],"names":[],"mappings":";;;;AACA;AACA;AAEA;AACA;AALA;;;;;;AAmBA,MAAM,oBAAoB;AAE1B,SAAS,YAAY,KAAY;IAC7B,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,EAAE,SAAS,EAAE,GAAG;IAEtB,MAAM,EAAE,YAAY,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,cAAW,AAAD;IACnC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;QAC1D,IAAI;QACJ,MAAM;QACN,UAAU;QACV,OAAO;QACP,MAAM;QACN,OAAO;QACP,QAAQ;IACZ;IAEA,MAAM,cAAc,CAAC;QACjB,MAAM,UAAU,aAAa,IAAI,CAAC,CAAC,MAAQ,IAAI,IAAI,KAAK;QACxD,IAAI,SAAS;YACT,eAAe,CAAC,OAAS,CAAC;oBAAE,GAAG,IAAI;oBAAE,UAAU,QAAQ,EAAE;gBAAC,CAAC;QAC/D;IACJ;IAEA,MAAM,YAAY;QACd,IAAI,WAAW;YACX,QAAQ;YACR,MAAM,cAAc,MAAM,0HAAA,CAAA,iBAAc,CAAC,OAAO,CAAC;YACjD,eAAe;gBAAE,GAAG,WAAW;gBAAE,IAAI;YAAU;QACnD,OAAO;YACH,QAAQ;QACZ;IACJ;IAEA,MAAM,oBAAoB,CACtB;QAEA,MAAM,EAAE,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM;QAE9B,eAAe,CAAC,OAAS,CAAC;gBACtB,GAAG,IAAI;gBACP,CAAC,GAAG,EACA,OAAO,cACP,OAAO,WACP,OAAO,UACP,OAAO,UACD,OAAO,SACP;YACd,CAAC;IACL;IAEA,MAAM,eAAe,OAAO;QACxB,EAAE,cAAc;QAChB,IAAI,SAAS,QAAQ;YACjB,eAAe;YACf,MAAM,iBAAiB;YACvB,MAAM,UAAU,MAAM,0HAAA,CAAA,iBAAc,CAAC,MAAM,CAAC;YAC5C,IAAI,SAAS;gBACT,MAAM;YACV,OAAO;gBACH,MAAM;YACV;YACA;QACJ;QAEA,IAAI,SAAS,UAAU;YACnB,MAAM,aAAa;YACnB,MAAM,UAAU,MAAM,0HAAA,CAAA,iBAAc,CAAC,MAAM,CAAC;YAC5C,IAAI,SAAS;gBACT,MAAM;YACV,OAAO;gBACH,MAAM;YACV;YACA;QACJ;IACJ;IACA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,QAAQ,GAAG,CAAC;IAChB,GAAG;QAAC;KAAY;IAEhB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN;IACJ,GAAG,EAAE;IACL,qBACI;kBACI,cAAA,8OAAC;YAAK,UAAU;YAAc,WAAU;;8BACpC,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAM,SAAQ;sCAAO;;;;;;sCACtB,8OAAC;4BACG,IAAG;4BACH,MAAK;4BACL,OAAO,YAAY,IAAI;4BACvB,UAAU;4BACV,WAAW;;;;;;;;;;;;8BAGnB,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAM,SAAQ;sCAAW;;;;;;sCAC1B,8OAAC;4BACG,IAAG;4BACH,OAAO,YAAY,QAAQ;4BAC3B,WAAW;4BACX,UAAU;sCAET,aAAa,GAAG,CAAC,CAAC;gCACf,qBACI,8OAAC;oCAAoB,OAAO,IAAI,EAAE;8CAC7B,IAAI,IAAI;mCADA,IAAI,EAAE;;;;;4BAI3B;;;;;;;;;;;;8BAGR,8OAAC;8BACG,cAAA,8OAAC,sIAAA,CAAA,UAAgB;wBACb,qBAAqB;wBACrB,yBAAyB;wBACzB,+CAA+C;wBAC/C,aAAa;wBACb,IAAI;wBACJ,YAAY;wBACZ,UAAU;;;;;;;;;;;8BAGlB,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAM,SAAQ;sCAAQ;;;;;;sCACvB,8OAAC;4BACG,IAAG;4BACH,MAAK;4BACL,OAAO,YAAY,KAAK;4BACxB,UAAU;4BACV,WAAW;;;;;;;;;;;;8BAGnB,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAM,SAAQ;sCAAO;;;;;;sCACtB,8OAAC;4BACG,IAAG;4BACH,MAAK;4BACL,OAAO,YAAY,IAAI;4BACvB,UAAU;4BACV,WAAW;;;;;;;;;;;;8BAGnB,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAM,SAAQ;sCAAQ;;;;;;sCACvB,8OAAC;4BACG,IAAG;4BACH,MAAK;4BACL,OAAO,YAAY,KAAK;4BACxB,UAAU;4BACV,WAAW;;;;;;;;;;;;8BAGnB,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAM,SAAQ;sCAAS;;;;;;sCACxB,8OAAC;4BACG,IAAG;4BACH,MAAK;4BACL,OAAO,YAAY,MAAM;4BACzB,UAAU;4BACV,WAAW;;;;;;;;;;;;8BAGnB,8OAAC;oBAAO,MAAK;oBAAS,WAAW;8BAAmB;;;;;;;;;;;;;AAMpE;uCACe"}},
    {"offset": {"line": 532, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}