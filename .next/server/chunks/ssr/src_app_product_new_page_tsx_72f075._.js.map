{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/narit/Desktop/pos-frontend/src/app/product/new/page.tsx"],"sourcesContent":["\"use client\"\nimport { useState } from \"react\"\nimport { useCategory } from \"@/contexts/Category\"\n\ninterface Product {\n    id?: number\n    name: string\n    category: number\n    price: number\n    cost: number\n    stock: number\n}\nconst defaultInputStyle = \"p-2 border rounded\"\n\nexport default function Page() {\n    const { categoryList } = useCategory()\n    const [thisProduct, setThisProduct] = useState<Product>({\n        name: \"\",\n        category: 0,\n        price: 0,\n        cost: 0,\n        stock: 0,\n    })\n\n    const handleInputChange = (\n        e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n    ) => {\n        const { id, value } = e.target\n\n        setThisProduct((prev) => ({\n            ...prev,\n            [id]:\n                id === \"category\" ||\n                id === \"price\" ||\n                id === \"cost\" ||\n                id === \"stock\"\n                    ? Number(value)\n                    : value,\n        }))\n    }\n\n    const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault()\n    }\n    return (\n        <div>\n            <form onSubmit={handleSubmit} className=\"flex flex-col\">\n                <div className=\"flex flex-col p-2\">\n                    <label htmlFor=\"name\">Product Name</label>\n                    <input\n                        id=\"name\"\n                        type=\"text\"\n                        value={thisProduct.name}\n                        onChange={handleInputChange}\n                        className={defaultInputStyle}\n                    />\n                </div>\n                <div className=\"flex flex-col p-2\">\n                    <label htmlFor=\"category\">Category</label>\n                    <select\n                        id=\"category\"\n                        value={thisProduct.category}\n                        className={defaultInputStyle}\n                    >\n                        {categoryList.map((cat) => {\n                            return (\n                                <option key={cat.id} value={cat.id}>\n                                    {cat.name}\n                                </option>\n                            )\n                        })}\n                    </select>\n                </div>\n                <div className=\"flex flex-col p-2\">\n                    <label htmlFor=\"price\">Price</label>\n                    <input\n                        id=\"price\"\n                        type=\"number\"\n                        value={thisProduct.price}\n                        onChange={handleInputChange}\n                        className={defaultInputStyle}\n                    />\n                </div>\n                <div className=\"flex flex-col p-2\">\n                    <label htmlFor=\"cost\">Cost</label>\n                    <input\n                        id=\"cost\"\n                        type=\"number\"\n                        value={thisProduct.cost}\n                        onChange={handleInputChange}\n                        className={defaultInputStyle}\n                    />\n                </div>\n                <div className=\"flex flex-col p-2\">\n                    <label htmlFor=\"stock\">Stock</label>\n                    <input\n                        id=\"stock\"\n                        type=\"number\"\n                        value={thisProduct.stock}\n                        onChange={handleInputChange}\n                        className={defaultInputStyle}\n                    />\n                </div>\n            </form>\n        </div>\n    )\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AAYA,MAAM,oBAAoB;AAEX,SAAS;IACpB,MAAM,EAAE,YAAY,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,cAAW,AAAD;IACnC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;QACpD,MAAM;QACN,UAAU;QACV,OAAO;QACP,MAAM;QACN,OAAO;IACX;IAEA,MAAM,oBAAoB,CACtB;QAEA,MAAM,EAAE,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM;QAE9B,eAAe,CAAC,OAAS,CAAC;gBACtB,GAAG,IAAI;gBACP,CAAC,GAAG,EACA,OAAO,cACP,OAAO,WACP,OAAO,UACP,OAAO,UACD,OAAO,SACP;YACd,CAAC;IACL;IAEA,MAAM,eAAe,CAAC;QAClB,EAAE,cAAc;IACpB;IACA,qBACI,8OAAC;kBACG,cAAA,8OAAC;YAAK,UAAU;YAAc,WAAU;;8BACpC,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAM,SAAQ;sCAAO;;;;;;sCACtB,8OAAC;4BACG,IAAG;4BACH,MAAK;4BACL,OAAO,YAAY,IAAI;4BACvB,UAAU;4BACV,WAAW;;;;;;;;;;;;8BAGnB,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAM,SAAQ;sCAAW;;;;;;sCAC1B,8OAAC;4BACG,IAAG;4BACH,OAAO,YAAY,QAAQ;4BAC3B,WAAW;sCAEV,aAAa,GAAG,CAAC,CAAC;gCACf,qBACI,8OAAC;oCAAoB,OAAO,IAAI,EAAE;8CAC7B,IAAI,IAAI;mCADA,IAAI,EAAE;;;;;4BAI3B;;;;;;;;;;;;8BAGR,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAM,SAAQ;sCAAQ;;;;;;sCACvB,8OAAC;4BACG,IAAG;4BACH,MAAK;4BACL,OAAO,YAAY,KAAK;4BACxB,UAAU;4BACV,WAAW;;;;;;;;;;;;8BAGnB,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAM,SAAQ;sCAAO;;;;;;sCACtB,8OAAC;4BACG,IAAG;4BACH,MAAK;4BACL,OAAO,YAAY,IAAI;4BACvB,UAAU;4BACV,WAAW;;;;;;;;;;;;8BAGnB,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAM,SAAQ;sCAAQ;;;;;;sCACvB,8OAAC;4BACG,IAAG;4BACH,MAAK;4BACL,OAAO,YAAY,KAAK;4BACxB,UAAU;4BACV,WAAW;;;;;;;;;;;;;;;;;;;;;;;AAMnC"}},
    {"offset": {"line": 202, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}